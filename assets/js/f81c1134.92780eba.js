"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"dockerizeprotocollogger","metadata":{"permalink":"/blog/dockerizeprotocollogger","source":"@site/blog/2024-06-11-dockerize-protocolLogger/index.md","title":"Dockerize MQTT protocol Logger.","description":"Docusaurus Plushie","date":"2024-06-11T00:00:00.000Z","tags":[{"inline":false,"label":"linux","permalink":"/blog/tags/linux","description":"linux"}],"readingTime":2.13,"hasTruncateMarker":true,"authors":[{"name":"Selcuk Gok","title":"Maintainer","url":"https://github.com/selcukgk29","imageURL":"https://avatars.githubusercontent.com/u/36342161?s=400&u=24c9a3b5bdc0717dd3a73952862c8078861a0b6d&v=4","key":"selcuk"}],"frontMatter":{"slug":"dockerizeprotocollogger","title":"Dockerize MQTT protocol Logger.","authors":"selcuk","tags":["linux"]},"unlisted":false,"nextItem":{"title":"Linux System memory konfig\xfcrasyonu.","permalink":"/blog/linuxsysmem"}},"content":"![Docusaurus Plushie](./clicompose.PNG)\\nBu Dockerize edilmi\u015f MQTT protokol logger uygulamas\u0131, 4 adet Docker container\'\u0131ndan olu\u015fmaktad\u0131r: Python logger servisi, Node.js REST API servisi, Mosquitto MQTT brokeri ve MongoDB sunucusu. Uygulaman\u0131n \xe7al\u0131\u015fma mant\u0131\u011f\u0131 \u015fu \u015fekildedir:\\n\\n\x3c!-- truncate --\x3e\\n\\n**Python Logger Servisi:**\\n\\nBa\u015flang\u0131\xe7ta \xe7al\u0131\u015farak MQTT broker\u0131na ve MongoDB sunucusuna ba\u011flan\u0131r.\\nMQTT broker\u0131 \xfczerinde olu\u015fmu\u015f t\xfcm topic\'leri dinler.\\nHerhangi bir MQTT topic\'ine yeni veri ula\u015ft\u0131\u011f\u0131nda, bu topic ad\u0131nda bir MongoDB koleksiyonu olu\u015fturur.\\nVerileri ilgili koleksiyon i\xe7ine yazarak MongoDB\'ye kaydeder.\\n\\n\\n**Mosquitto MQTT Broker:**\\n\\nMQTT istemcileri ve Python logger servisi aras\u0131nda mesajla\u015fma sa\u011flar.\\nBelirli bir MQTT topic\'ine abone olan istemcilere mesajlar\u0131 iletebilir.\\n\\n![Docusaurus Plushie](./mqttbox.PNG)\\n\\n**MongoDB Sunucusu:**\\n\\nVeritaban\u0131 olarak kullan\u0131l\u0131r.\\nPython logger servisinin ald\u0131\u011f\u0131 MQTT verilerini saklamak i\xe7in kullan\u0131l\u0131r.\\nHer MQTT topic\'i i\xe7in ayr\u0131 bir MongoDB koleksiyonu olu\u015fturur ve bu koleksiyonlara veri kaydeder.\\n\\n![Docusaurus Plushie](./mongosh.PNG)\\n\\n\\n**Node.js REST API Servisi:**\\n\\nMongoDB sunucusundaki verilere eri\u015fim sa\u011flamak ve istemcilere HTTP API \xfczerinden veri sunmak i\xe7in kullan\u0131l\u0131r.\\n\u0130stemcilerin MongoDB\'deki verilere eri\u015fmesine, veri eklemesine veya g\xfcncellemesine izin veren HTTP endpoint\'leri sunar.\\n\\nNode.js REST API servisi, istemcilerin MongoDB sunucusundaki verilere HTTP API \xfczerinden eri\u015fmesine olanak tan\u0131r. REST API servisinize gelen isteklerin kimlik do\u011frulamas\u0131 i\xe7in Bearer token gereklidir.Login requestinin response unda bu token bulunur.A\u015fa\u011f\u0131da belirtilen HTTP endpoint\'leri sa\u011flar:\\n\\n### `/user/login`\\n\\n- **A\xe7\u0131klama**: Kullan\u0131c\u0131 giri\u015fi i\xe7in POST iste\u011fi al\u0131r.\\n- **\xd6rnek \u0130stek**:\\n\\n  ```json\\n  POST http://localhost:5000/user/login\\n\\n  {\\n    \\"email\\": \\"asd@asd.com\\",\\n    \\"password\\": \\"123456\\"\\n  }\\n  ```\\n\\n### `/getAll`\\n\\n- **A\xe7\u0131klama**: Belirtilen koleksiyondaki t\xfcm belgeleri almak i\xe7in GET iste\u011fi al\u0131r.\\n- **\xd6rnek \u0130stek**:\\n\\n  ```json\\n  GET http://localhost:5000/getAll\\n\\n  {\\n    \\"request\\": {\\n      \\"type\\": \\"GET\\",\\n      \\"method\\": \\"getAll\\",\\n      \\"url\\": \\"http://localhost:3000/getAll\\",\\n      \\"body\\": {\\n        \\"message\\": \\"Please choose collection\\",\\n        \\"collections\\": [\\n          \\"users\\",\\n          \\"testtopic0\\"\\n        ]\\n      }\\n    }\\n  }\\n  ```\\n\\n### `/getAll/testtopic0`\\n\\n- **A\xe7\u0131klama**: `testtopic0` koleksiyonundaki belgeleri almak i\xe7in GET iste\u011fi al\u0131r.\\n- **\xd6rnek \u0130stek**:\\n\\n  ```json\\n  GET http://localhost:5000/getAll/testtopic0\\n\\n  {\\n    \\"request\\": {\\n      \\"type\\": \\"GET\\",\\n      \\"url\\": \\"http://localhost:3000/getAll/testtopic0\\",\\n      \\"body\\": {\\n        \\"message\\": \\"Response is coming from testtopic0 collection\\",\\n        \\"values\\": [\\n          {\\n            \\"_id\\": \\"6668b9d26379a9f6d0d75288\\",\\n            \\"topic\\": \\"testtopic0\\",\\n            \\"payload\\": [\\n              {\\n                \\"testkey\\": \\"560,456\\"\\n              }\\n            ],\\n            \\"time\\": 1718139346167\\n          },\\n          {\\n            \\"_id\\": \\"6668ba076379a9f6d0d7528a\\",\\n            \\"topic\\": \\"testtopic0\\",\\n            \\"payload\\": [\\n              {\\n                \\"testkey\\": \\"460,456\\"\\n              }\\n            ],\\n            \\"time\\": 1718139399258\\n          },\\n          {\\n            \\"_id\\": \\"6668ba0e6379a9f6d0d7528c\\",\\n            \\"topic\\": \\"testtopic0\\",\\n            \\"payload\\": [\\n              {\\n                \\"testkey\\": \\"460,456\\"\\n              }\\n            ],\\n            \\"time\\": 1718139406714\\n          },\\n          {\\n            \\"_id\\": \\"6668ba126379a9f6d0d7528e\\",\\n            \\"topic\\": \\"testtopic0\\",\\n            \\"payload\\": [\\n              {\\n                \\"testkey\\": \\"480,456\\"\\n              }\\n            ],\\n            \\"time\\": 1718139410901\\n          },\\n          {\\n            \\"_id\\": \\"6668ba176379a9f6d0d75290\\",\\n            \\"topic\\": \\"testtopic0\\",\\n            \\"payload\\": [\\n              {\\n                \\"testkey\\": \\"489,456\\"\\n              }\\n            ],\\n            \\"time\\": 1718139415455\\n          }\\n        ]\\n      }\\n    }\\n  }\\n  ```\\n\\n### `/getByDate/testtopic0/from=<starttimestamp>/to=<endtimestamp>`\\n\\n- **A\xe7\u0131klama**: Belirtilen zaman aral\u0131\u011f\u0131 i\xe7indeki `testtopic0` koleksiyonundaki belgeleri almak i\xe7in GET iste\u011fi al\u0131r.\\n- **\xd6rnek \u0130stek**:\\n\\n  ```json\\n  GET http://localhost:5000/getByDate/testtopic0/from=1718139346167/to=1718139415455\\n  ```\\n\\nBu endpoint\'ler, istemcilere belirli koleksiyonlardaki verilere eri\u015fme ve i\u015flemler yapma imkan\u0131 sa\u011flar. MongoDB veritaban\u0131n\u0131zda ilgili koleksiyonlar\u0131n ve istemci isteklerinin do\u011fru \u015fekilde y\xf6nlendirilmesini sa\u011flamak i\xe7in bu \xf6rnekler \xfczerinden ilerleyebilirsiniz."},{"id":"linuxsysmem","metadata":{"permalink":"/blog/linuxsysmem","source":"@site/blog/2022-09-05-linux-system-mem/index.md","title":"Linux System memory konfig\xfcrasyonu.","description":"Bu b\xf6l\xfcmde sistem memory kullan\u0131m\u0131 geli\u015ftirmek i\xe7in kullan\u0131lan memory-related kernel parametlerini a\xe7\u0131klayaca\u011f\u0131m. Bu parametreleri set etmek i\xe7in kullanaca\u011f\u0131m\u0131z komut sysctl komutudur. Set edece\u011fimiz de\u011ferler /proc dizininde yer al\u0131r.Memory kullan\u0131m\u0131n\u0131 basit olarak bir veya daha fazla kernel parametrelerini set ederek d\xfczenleyebiliriz.","date":"2022-09-05T00:00:00.000Z","tags":[{"inline":false,"label":"linux","permalink":"/blog/tags/linux","description":"linux"}],"readingTime":1.845,"hasTruncateMarker":true,"authors":[{"name":"Selcuk Gok","title":"Maintainer","url":"https://github.com/selcukgk29","imageURL":"https://avatars.githubusercontent.com/u/36342161?s=400&u=24c9a3b5bdc0717dd3a73952862c8078861a0b6d&v=4","key":"selcuk"}],"frontMatter":{"slug":"linuxsysmem","title":"Linux System memory konfig\xfcrasyonu.","authors":"selcuk","tags":["linux"]},"unlisted":false,"prevItem":{"title":"Dockerize MQTT protocol Logger.","permalink":"/blog/dockerizeprotocollogger"},"nextItem":{"title":"A MQTT client with PyQt5","permalink":"/blog/mqttclient"}},"content":"Bu b\xf6l\xfcmde sistem memory kullan\u0131m\u0131 geli\u015ftirmek i\xe7in kullan\u0131lan memory-related kernel parametlerini a\xe7\u0131klayaca\u011f\u0131m. Bu parametreleri set etmek i\xe7in kullanaca\u011f\u0131m\u0131z komut sysctl komutudur. Set edece\u011fimiz de\u011ferler /proc dizininde yer al\u0131r.Memory kullan\u0131m\u0131n\u0131 basit olarak bir veya daha fazla kernel parametrelerini set ederek d\xfczenleyebiliriz.\\n\\n\x3c!-- truncate --\x3e\\n\\n\xd6rnek\\n\\novercommit_memory ge\xe7ici olarak 1 e set etmek i\xe7in\\n\\nKal\u0131c\u0131 set i\xe7in\\n\\n/etc/sysctl.conf dizindeki dosyadan veya direkt a\u015fa\u011f\u0131daki komutla konfig\xfcre edilebilir.\\n\\n#sysctl vm.overcommit_memory=1 /etc/sysctl.conf\\n\\n#sysctl -p komutu ile uygulanm\u0131\u015f t\xfcm konfig\xfcrasyonlar\u0131 g\xf6rebilirsiniz.\\n\\nVirtual Memory Parameters\\n\\nVirtual memory parametreleri genellikle /proc/sys/vm dizini alt\u0131nda bulunur.\\n\\ndirty_ratio:Y\xfczdesel bir de\u011ferdir. Total system memory bu de\u011fer kadar de\u011fi\u015fti\u011finde, system geri kalan de\u011fi\u015fiklikleri disk e yazmaya ba\u015fl\u0131yor.Default de\u011feri %20 dir.\\n\\ndirty_background_ratio :Y\xfczdesel bir de\u011ferdir. Total system memory bu de\u011fer kadar de\u011fi\u015fti\u011finde, system geri kalan de\u011fi\u015fiklikleri arkaplanda disk e yazmaya ba\u015fl\u0131yor.Default de\u011feri %10 dur.\\n\\novercommit_memory:Fazla memory kullan\u0131m\u0131n\u0131 engellemeyi veya kabul etmeyi tan\u0131mlad\u0131\u011f\u0131m\u0131z parametredir.\\n\\nDefault de\u011feri 0 d\u0131r. Bu modda kernel heuristic algoritmas\u0131n\u0131 kullanarak memory kullan\u0131m\u0131na karar verir.(Heuristic algoritma en iyi sonucu garanti etmez fakat makul s\xfcrede iyiye yak\u0131n bir sonu\xe7 verir). Process lerde oom killer \xe7al\u0131\u015fma riski vard\u0131r.\\n\\nParametre 1 e ayarland\u0131\u011f\u0131nda kernel memory ta\u015fmalar\u0131na kar\u015f\u0131 bir i\u015flem ger\xe7ekle\u015ftirmez. Yo\u011fun bellek kullan\u0131mlar\u0131nda performans\u0131 art\u0131r\u0131r.\\n\\nParametre 2 e ayarland\u0131\u011f\u0131nda kernel memory kullan\u0131m istekleri, toplam kullan\u0131labilir swap memory ve overcommit_ratio da tan\u0131mlad\u0131\u011f\u0131m\u0131z fiziksel RAM y\xfczdesinden fazlaysa engeller. Bu mod belle\u011fin a\u015f\u0131r\u0131 y\xfcklenme riskini azalt\u0131r sadece yeteri kadar swap memory ve physical memory varsa kullan\u0131lmal\u0131d\u0131r.\\n\\novercommit_radio:overcommit_memory 2 olarak ayarland\u0131\u011f\u0131nda dikkate al\u0131nan RAM y\xfczdesini belirtir.Varsay\u0131lan de\u011feri %50 dir.\\n\\nmax_map_count:Processlerin kulland\u0131\u011f\u0131 maximum memory map alanlar\u0131n\u0131 tan\u0131mlar.Default de\u011feri 65530.\\n\\nmin_free_kbytes:Systemde tutulacak minimum bo\u015f aland\u0131r.Kb cinsinde de\u011fer tan\u0131mlan\u0131r. D\xfc\u015f\xfck de\u011ferler tan\u0131mlanmal\u0131d\u0131r.Fazla de\u011fer tan\u0131m\u0131 sistemin hemen yetersiz bellek durumuna ge\xe7mesine ve kilitlenmesine neden olabilir.\\n\\noom_adj:OOM Killer \xe7al\u0131\u015ft\u0131\u011f\u0131nda sistem kendini recover edene kadar oom_score en y\xfcksekten ba\u015flayarak processleri kill eder. oom_adj processlerin oom_score unu tan\u0131mlaya yard\u0131m eder. E\u011fer oom_adj = -17 olursa oom_killer o process i kill etmez.\\n\\nSwappiness: RAM kullan\u0131m\u0131n\u0131n yeterli olmad\u0131\u011f\u0131 durumlarda sistem diskten bir b\xf6l\xfcm ay\u0131rarak kullan\u0131r. Bu ay\u0131r\u0131lan b\xf6l\xfcme swap memory denir. 0\u2013100 aras\u0131 bir de\u011fer al\u0131r. Default de\u011feri 60 d\u0131r. Swappiness parametresi ne kadar y\xfcksekse swap memory kullan\u0131m\u0131 o kadar artar.Bu da systemde yava\u015flamaya neden olabilir.D\xfc\u015f\xfck de\u011ferlerde swap yerine daha \xe7ok physcal RAM kullan\u0131laca\u011f\u0131ndan sistem daha h\u0131zl\u0131 olur. Bu y\xfczden genellikle h\u0131zland\u0131rmak i\xe7in bu de\u011fer d\xfc\u015f\xfck se\xe7ilir."},{"id":"mqttclient","metadata":{"permalink":"/blog/mqttclient","source":"@site/blog/2022-08-26-mqttclient/index.md","title":"A MQTT client with PyQt5","description":"MQTT Smart Home Client GUI application that has been designed with PyQt5 to establish functions monitor.","date":"2022-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"MQTT","permalink":"/blog/tags/mqtt","description":"IOT"},{"inline":false,"label":"PYTHON","permalink":"/blog/tags/python","description":"IOT"}],"readingTime":0.53,"hasTruncateMarker":true,"authors":[{"name":"Selcuk Gok","title":"Maintainer","url":"https://github.com/selcukgk29","imageURL":"https://avatars.githubusercontent.com/u/36342161?s=400&u=24c9a3b5bdc0717dd3a73952862c8078861a0b6d&v=4","key":"selcuk"}],"frontMatter":{"slug":"mqttclient","title":"A MQTT client with PyQt5","authors":["selcuk"],"tags":["mqtt","python"]},"unlisted":false,"prevItem":{"title":"Linux System memory konfig\xfcrasyonu.","permalink":"/blog/linuxsysmem"},"nextItem":{"title":"Weather GUI application made using Python","permalink":"/blog/weatheraoo"}},"content":"MQTT Smart Home Client GUI application that has been designed with PyQt5 to establish functions monitor.\\n\\n![Docusaurus Plushie](./1643583863074-01b618aaed4c59d5c66bc4a9c48674f6.jpeg)\\n\x3c!-- truncate --\x3e\\n\\nSmarT TecH IOT Dashboard is MQTT client desktop application made using PyQT5 and paho-mqtt.You can control home temperature, swicthes and air conditioner. This will also run GUI application establish functions monitor.This Program to be designed consists of 2 components, namely Local MQTT Server, Fake temperature(mqtt.py) Node Client on a local network. Local MQTT Server to function as a server MQTT used between the Client for MQTT communication or place where the function \\"publish\\" and \\"subscribe\\" to be processed and regulated by the Server MQTT.\\n\\n\\n[GitHub](https://github.com/selcukgk29/A-MQTT-client-with-PyQt5-PSide2)"},{"id":"weatheraoo","metadata":{"permalink":"/blog/weatheraoo","source":"@site/blog/2022-08-20-weatherapp/index.md","title":"Weather GUI application made using Python","description":"Modbus TCP web client.Allow you to easily write to and read from registers on a web server.","date":"2022-08-20T00:00:00.000Z","tags":[{"inline":false,"label":"PYTHON","permalink":"/blog/tags/python","description":"IOT"}],"readingTime":0.22,"hasTruncateMarker":false,"authors":[{"name":"Selcuk Gok","title":"Maintainer","url":"https://github.com/selcukgk29","imageURL":"https://avatars.githubusercontent.com/u/36342161?s=400&u=24c9a3b5bdc0717dd3a73952862c8078861a0b6d&v=4","key":"selcuk"}],"frontMatter":{"slug":"weatheraoo","title":"Weather GUI application made using Python","authors":["selcuk"],"tags":["python"]},"unlisted":false,"prevItem":{"title":"A MQTT client with PyQt5","permalink":"/blog/mqttclient"},"nextItem":{"title":"Modbus TCP web client.","permalink":"/blog/modbustcpwebclient"}},"content":"Modbus TCP web client.Allow you to easily write to and read from registers on a web server.\\n\\n![Docusaurus Plushie](./150692720-72eb3f70-d5e4-428e-abcb-f4c709097d23.png)\\n\\nThis is simple Web Scraping project using beautifulsoup4 and requests module.\\n\\nFetches the weather forcast based on the location (city) entered by the user.\\n\\n[GitHub](https://github.com/selcukgk29/PySide2BeatifulSoupWebScrapping)"},{"id":"modbustcpwebclient","metadata":{"permalink":"/blog/modbustcpwebclient","source":"@site/blog/2019-09-05-modbus/index.md","title":"Modbus TCP web client.","description":"A Modbus TCP web client facilitates easy communication with Modbus TCP servers, enabling seamless reading from and writing to registers. This application is commonly used in industrial automation, energy management, building automation, and IoT sectors for efficient data exchange and control.","date":"2019-09-05T00:00:00.000Z","tags":[{"inline":false,"label":"MQTT","permalink":"/blog/tags/mqtt","description":"IOT"},{"inline":false,"label":"IOT","permalink":"/blog/tags/modbustcpclient","description":"IOT"},{"inline":false,"label":"PYTHON","permalink":"/blog/tags/python","description":"IOT"}],"readingTime":0.22,"hasTruncateMarker":false,"authors":[{"name":"Selcuk Gok","title":"Maintainer","url":"https://github.com/selcukgk29","imageURL":"https://avatars.githubusercontent.com/u/36342161?s=400&u=24c9a3b5bdc0717dd3a73952862c8078861a0b6d&v=4","key":"selcuk"}],"frontMatter":{"slug":"modbustcpwebclient","title":"Modbus TCP web client.","authors":"selcuk","tags":["mqtt","iot","python"]},"unlisted":false,"prevItem":{"title":"Weather GUI application made using Python","permalink":"/blog/weatheraoo"}},"content":"A Modbus TCP web client facilitates easy communication with Modbus TCP servers, enabling seamless reading from and writing to registers. This application is commonly used in industrial automation, energy management, building automation, and IoT sectors for efficient data exchange and control.\\n\\n![Docusaurus Plushie](./1678997741809-eb059ef4b72a3f731db3cbb72dc4812d.gif)\\n\\n[GitHub](https://github.com/selcukgk29/modbus-tcp-web-client)"}]}}')}}]);